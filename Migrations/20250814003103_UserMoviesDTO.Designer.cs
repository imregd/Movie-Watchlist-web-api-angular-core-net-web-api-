// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Movie_Watchlist_web_api__angular___core_net_web_api_.DBConstructor;

#nullable disable

namespace Movie_Watchlist_web_api__angular___core_net_web_api_.Migrations
{
    [DbContext(typeof(DB_Constructor))]
    [Migration("20250814003103_UserMoviesDTO")]
    partial class UserMoviesDTO
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.8");

            modelBuilder.Entity("Movie_Watchlist_web_api__angular___core_net_web_api_.DBModel.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("UserId");

                    b.ToTable("UserData");
                });

            modelBuilder.Entity("Movie_Watchlist_web_api__angular___core_net_web_api_.DBModel.UserDTO", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.HasKey("UserId");

                    b.ToTable("UserDTO");
                });

            modelBuilder.Entity("Movie_Watchlist_web_api__angular___core_net_web_api_.DBModel.UserMovies", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("MovieName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("MovieRating")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("MovieWatched")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserMovies");
                });

            modelBuilder.Entity("Movie_Watchlist_web_api__angular___core_net_web_api_.DBModel.UserMoviesDTO", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("MovieName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("MovieRating")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("MovieWatched")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("UserDTOUserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("UserDTOUserId");

                    b.ToTable("UserMoviesDTO");
                });

            modelBuilder.Entity("Movie_Watchlist_web_api__angular___core_net_web_api_.DBModel.UserMovies", b =>
                {
                    b.HasOne("Movie_Watchlist_web_api__angular___core_net_web_api_.DBModel.User", "User")
                        .WithMany("UserMovies")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Movie_Watchlist_web_api__angular___core_net_web_api_.DBModel.UserMoviesDTO", b =>
                {
                    b.HasOne("Movie_Watchlist_web_api__angular___core_net_web_api_.DBModel.UserDTO", null)
                        .WithMany("UserMovies")
                        .HasForeignKey("UserDTOUserId");
                });

            modelBuilder.Entity("Movie_Watchlist_web_api__angular___core_net_web_api_.DBModel.User", b =>
                {
                    b.Navigation("UserMovies");
                });

            modelBuilder.Entity("Movie_Watchlist_web_api__angular___core_net_web_api_.DBModel.UserDTO", b =>
                {
                    b.Navigation("UserMovies");
                });
#pragma warning restore 612, 618
        }
    }
}
